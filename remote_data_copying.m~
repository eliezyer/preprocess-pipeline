function out_msg = remote_data_copying(remote_path,local_path)
%function to copy data remotely from recording computers to local computers
%only if the local_path don't have concatenated versions of it

%loop through remote paths to get animal folders and session folders
for a = 1:length(remote_path)
    %getting all the folders inside remote_path
    temp_remote = dir(remote_path{a});
    %all folders on the remote path are collected in the next line, 
    %assuming every folder is an animal folder
    aux_dir = [temp_remote(3:end).isdir];
    temp_animal = {temp_remote(3:end).name};
    temp_animal = temp_animal(aux_dir);
    
    %loop through every animal folder to get all the sessions folders
    for aa = 1:length(temp_animal)
        %% separating potential folders from remote
        temp_ses = dir(fullfile(remote_path{a},temp_animal{aa}));
        aux_dir = [temp_ses(3:end).isdir];
        %folders that can be potentially copied
        potential_folders  = {temp_ses(3:end).name};
        potential_folders = potential_folders(aux_dir);
        
        %selecting only folders that have more than 14 characters, 
        %this is because of intan default of saving date as _yymmdd_hhmmss.
        temp_idx = cellfun(@(x) length(x),potential_folders)>14;
        potential_folders   = potential_folders(temp_idx);
        
        %% checking if local folder has sessions to copy 
        %checkig whether local folder has that animal folder
        if ~isdir(fullfile(local_path,temp_animal{aa}))
            mkdir(fullfile(local_path,temp_animal{aa}))
        end
        
        %checking if the potential folder to copy was not already
        %concatenated in that folder
        temp_dates = cellfun(@(x) x(end-12:end-7),temp_names2,'UniformOutput',false);
keep_folders = ~ismember(temp_dates,temp_session_names);

%these are the folders to concatenate
folders2cat = temp_names2(keep_folders);
        
%         remote_folder(a).animal_folder(aa).name = temp_animal{aa};
%         remote_folder(a).animal_folder(aa).potential_folders = potential_folders;
    end
end

if isunix
     copystring = ['! rsync -a -v -W -c -r ', remote_path{1}, ' ',local_path];
elseif ispc
    copystring = ['! xcopy /e /v', remote_path{1}, ' ',local_path];
end

%execute comand in catstring
eval(copystring)